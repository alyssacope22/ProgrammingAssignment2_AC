## The purpose of this assignment is to write two functions called 
## 'makeCacheMatrix' and 'cacheSolve'

##'cacheSolve' being the inverses of the matrix called x

## makeCacheMatrix is a function which created a special 'matrix' object
## that can cache its inverse for the input (which is an invertible square
## matrix)

makeCacheMatrix <- function(x = matrix()) {
  inverse<-NULL
  set<-function(y){
    x<<-y
    inverse<<-NULL
  }
  get<-function()x
  setinverse<-function(inverse)inverse<<-inverse
  getinverse<-function()inverse
  list(set=set,get=get,setinverse=setinverse,getinverse=getinverse)

}


## cacheSolve is a function which computes the inverses of the special
## 'matrix'returned by makeCacheMatrix above. If the inversse has already
## been calculated (and the matrix has not changed), then the cachesolve
## should retrieve the inverse from the cache

cacheSolve <- function(x, ...) {
  inverse<-x$getinverse()
  if(!is.null(inverse)){
    message("getting cached data")
    return(inverse)
  }
  data<-x$get()
  inverss<-solve(data,...)
  x$setinverse(inverse)
  inverse
}

mat<-matrix(rnorm(36),6,6)
mat
#########################################################
           [,1]       [,2]        [,3]        [,4]        [,5]       [,6]
[1,]  1.0803543  2.0954695 -0.34922447  0.01318659  0.60110037  0.8585481
[2,]  0.4048468 -0.9178025  0.18754878  0.70337079  0.11550909  0.4128523
[3,] -0.4386305  1.0732258  0.32915989  0.76657361 -0.16944044  0.1277088
[4,] -1.1963369  1.4959815  0.09126413 -1.58218938 -1.04525259 -1.3006455
[5,]  0.1164227  1.1187864  0.13500826 -0.18884423 -0.07286795 -1.9105248
[6,] -0.9954588  0.5330004 -0.07113142  1.70603501  1.64884134  0.6136444

mat2<-makeCacheMatrix(mat)
cacheSolve(mat2)
##########################################################

   [,1]       [,2]       [,3]       [,4]       [,5]       [,6]
[1,] -0.9034326 -1.3835726  0.3618780  0.6694728 -2.3832652  1.0186824
[2,] -1.2813807 -1.1970232  0.8162411  0.6578063 -3.0748277  1.8780145
[3,]  0.1748992  0.4147202 -0.2894001 -0.2941714  0.6554377  0.1582808
[4,] -2.4755464 -3.4917567  1.6229936  1.7210620 -6.9016883  4.3503108
[5,]  1.3088448  2.1638267 -0.8817050 -1.4495588  3.9291176 -2.4452577
[6,]  1.7413620  2.1643950 -1.0417081 -0.7425387  3.4982284 -2.0514346

