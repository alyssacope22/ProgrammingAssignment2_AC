## The purpose of this assignment is to write two functions called 
## 'makeCacheMatrix' and 'cacheSolve'

##'cacheSolve' being the inverses of the matrix called x

## makeCacheMatrix is a function which created a special 'matrix' object
## that can cache its inverse for the input (which is an invertible square
## matrix)

makeCacheMatrix <- function(x = matrix()) {
  inverse<-NULL
  set<-function(y){
    x<<-y
    inverse<<-NULL
  }
  get<-function()x
  setinverses<-function(inverse)inverse<<-inverse
  getinverses<-function()inverse
  list(set=set,get=get,setmean=setmean)

}


## cacheSolve is a function which computes the inverses of the special
## 'matrix'returned by makeCacheMatrix above. If the inversse has already
## been calculated (and the matrix has not changed), then the cachesolve
## should retrieve the inverse from the cache

cacheSolve <- function(x, ...) {
  inverse<-x$getinverse()
  if(!is.null(inverse)){
    message("getting cached data")
    return(inverse)
  }
  data<-x$get()
  inverses<-solve(data,...)
  x$setinverse(inverses)
}

mat<-matrix(rnorm(100),10,10)
mat2<-makeCacheMatrix(mat)
cacheSolve(mat2)

